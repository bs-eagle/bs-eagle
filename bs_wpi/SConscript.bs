import os
Import("*")

lib_name = "bs_wpi"
tar_name = "bs_wpi"

env = custom_env.Clone ()
env.Append (CPPPATH = ["include", "src",
	includes["kernel"],
	includes["bs_bos_core_base"],
	includes["bs_bos_core_data_storage"],
	includes["bs_mesh"]
]);

libs = ["blue_sky"];

if build_kind == "debug" :
	env.AppendUnique (
		LIBS = list_suffix (libs, "_d"),
		CPPDEFINES = ["CGAL_DISABLE_ROUNDING_MATH_CHECK"]
	);
	lib_name += "_d";
elif build_kind == "release" :
	env.AppendUnique (LIBS = libs);

env.AppendUnique(LIBS = ["CGAL", "gmp"]);
env.AppendUnique(CXXFLAGS = ["-frounding-math"]);

bs_wpi = env.SharedLibrary(
	target = os.path.join (tar_exe_plugin_dir, lib_name),
	source = files(["."]).sources
)
#   source = files (["."], ["well_path_ident_2d.cpp"]).sources)

env.Alias(tar_name, bs_wpi);
Export("bs_wpi");

if (env["install"] == 1) :
	inst_tar = env.Install("$plugins_prefix", bs_wpi);
	env.Alias(tar_name, inst_tar);

