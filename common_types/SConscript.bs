import os
Import ("*")

lib_name = "common_types"
tar_name = "common_types"

env = custom_env.Clone ()
env.Append (CPPPATH = ["include", "src",
	includes["bs_bos_core_base"]
	] + includes["kernel"],
	CPPDEFINES = ["_HDF5", 'H5_USE_16_API'],
	LIBS=["hdf5"])

libs = ["blue_sky"]
boost_libs = ["serialization"];

if (build_kind == "debug") :
	lib_name += "_d"
	env.AppendUnique(LIBS = list_suffix(libs, "_d") + map(lambda x : boost_libnames_d[x], boost_libs));
elif (build_kind == "release") :
	env.AppendUnique(LIBS = libs + map(lambda x : boost_libnames[x], boost_libs));

common_types = env.SharedLibrary(
	target = os.path.join (tar_exe_plugin_dir, lib_name),
	source = files (["."]).sources
)

env.Alias (tar_name, common_types)
Export ("common_types")

if (env["install"] == 1) :
	inst_tar = env.Install ("$plugins_prefix", common_types)
	env.Alias (tar_name, inst_tar)
